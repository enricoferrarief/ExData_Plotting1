install.packages("swirl")
getwd()
install.packages("KernSmooth R")
install.packages("KernSmoothR")
install.packages("KernSmoothR")
install.packages("KernSmooth")
help("KernSmooth")
library(KernSmooth)
swirl()
library(swirl)
swirl()
install_from_swirl("R Programming")
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
c(1.1,9,3.14)
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z * 2 + 100
mysqrt <- sqrt(z -1)
my_sqrt <- sqrt(z -1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
}
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get, setmean = setmean, getmean = getmean)
}
function (y) {}
set <- function (y) {
x <<- y
m <<- NULL
}
x <- c(1,2,3,4,5,6,7,8,9)
set(x)
x
m
x
y <- x
set(y)
m.rm()
remove(m)
remove(x)
a <- makevector(y)
a <- makeVector(y)
a
a[1]
a[2]
a[3]
a[4]
a[4,1]
a{[4]]
a[[4]]
source('~/Documents/Data Science Course/cachemean.R')
cachemean(y)
class(y)
a<- makeVector(y)
b<- cachemean(a)
b<- cachemean(y)
a$getmean()
a$get()
mean(a$get())
source('~/Documents/Data Science Course/cachemean.R')
b<- cachemean(a)
a
b$getmean(y)
a$getmean(y)
a$getmean
a$get
a$getmean()
a$setmean()
a$setmean(m)
a$setmean(y)
b<- cachemean(a)
c
v
b
a <<- makeVector(y)
b <<- cachemean(a)
source('~/Documents/Data Science Course/cachemean.R')
b <<- cachemean(a)
b
cachemean(b)
cachemean(a)
x <- matrix(c(1,2,3),c(1,2,3))
x
matrix(data=(c(1,2,3),c(1,2,3)))
matrix(data=([c(1,2,3),c(1,2,3)]))
matrix(data=(c(1,2,3),c(1,2,3)))
m <- 1:9dim(m) <- c(3,3)
m <- 1:9
m <- 1:9
dim(m) <- c(3,3)
m
solve(m)
numeric(m)
m <- NULL
m
source('~/Documents/Data Science Course/makeCacheMatrix.R')
source('~/Documents/Data Science Course/makeCacheMatrix.R')
makeCacheMatrix(m)
m$get
m <- 1:9
dim(m) <- c(3,3)
m$get
m$get()
a <- makeCacheMatrix(m)
a$get()
a$set()
a$setinverse()
source('~/Documents/Data Science Course/makeCacheMatrix.R')
makeCacheMatrix <- function(m) {
x <- NULL
set <- function(y) {
m <<- y
x <<- NULL
}
get <- function() m
setinverse <- function(solve) m <<- solve
getinverse <- function() m
list(set = set, get = get, setinverse = setinverse, getinverse = getinverse)
}
source('~/Documents/Data Science Course/makeCacheMatrix.R')
m <- 1:9
dim(m) <- c(3,3)
a <- makeCacheMatrix(m)
a$set()
a$get()
a$setinverse()
swirl()
library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function("My first function!")
boring_function()
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(std,c(1.4,3.6,7.9,8.8))
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programmin","is","fun!")
paste("Programming","is","fun!")
submit()
submit()
telegram("Cappero")
submit()
mad_libs("NY","the","metallic dick")
submit()
"I" %p% "love" %p% "R!"
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
sapply(flags,class)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mate <- sapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals, length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
swirl()
library(swirl)
swirl()
sapply(flags,unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags,class)
vapply(flgas,class,character(1))
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
install.packages("google sheets")
install.packages("googlesheets")
source('~/Desktop/campaignGenerator.R')
library(googlesheets)
library(getgoogleauth)
install.packages(getgoogleauth)
help getGoogleAuth
?gs_url
?gs_read_csv
?gs_auth
source('~/Desktop/campaignGenerator.R')
source('~/ExData_Plotting1/plot1.R')
head(data)
head(data)
data$DateTime <- paste(data$Date, data$Time)
head(data)
data$DateTime <- strptime(data$DateTime, format = "%Y-%m-%d %H:%M:%S", tz = "UTC")
data$DateTime <- paste(str(data$Date), data$Time)
str(data$Date[1])
data$DateTime <- paste(str(data$Date), data$Time)
data$DateTime <- strptime(data$DateTime, format = "%Y-%m-%d %H:%M:%S", tz = "UTC"),
data$DateTime <- strptime(data$DateTime, format = "%Y-%m-%d %H:%M:%S", tz = "UTC")
data$DateTime <- paste(data$Date, data$Time)
data$DateTime
data$DateTime <- strptime(data$DateTime, format = "%Y-%m-%d %H:%M:%S", tz = "UTC")
data$DateTime
data$DateTime <- paste(data$Date, data$Time)
typeof(data$DateTime)
data$DateTime[1]
strptime(data$DateTime[1], format = "%Y-%m-%d %H:%M:%S", tz = "UTC")
strptime(data$DateTime[2], format = "%Y-%m-%d %H:%M:%S", tz = "UTC")
sapply(data$DateTime,strptime)
data$DateTime <- sapply(data$DateTime, strptime, format = "%Y-%m-%d %H:%M:%S", tz = "UTC")
data$DateTime[1:10]
data <- fread(fileName, sep = ";", header = TRUE, na.strings = c('?'), verbose = TRUE)
rm(ls())
rm(list = ls())
source('~/ExData_Plotting1/plot1.R')
source('~/ExData_Plotting1/plot1.R')
datetime
data$DateTime <- datetime
data$DateTime
typeof(datetime)
?strptime
data$DateTime <- format(datetime, "%Y-%m-%d %H:%M:%S")
data$DateTime
source('~/ExData_Plotting1/plot1.R')
date$DateTime
date$DateTime
head(data)
source('~/ExData_Plotting1/plot1.R')
head(data)
typeof(data$DateTime)
datetime <- strptime(paste(data$Date, data$Time), format = "%Y-%m-%d %H:%M:%S", tz = "UTC")
typeof(datetime)
source('~/ExData_Plotting1/plot1.R')
datetime
plot(datetime, data$Global_active_power)
plot(datetime, data$Global_active_power, type = line)
plot(datetime, data$Global_active_power, type = line)
plot(datetime, data$Global_active_power, type = "line")
plot(datetime, data$Global_active_power, type = "line", lty = 2, lwd = 2)
plot(datetime, data$Global_active_power, type = "line", lty = 3, lwd = 2)
plot(datetime, data$Global_active_power, type = "line", lty = 1, lwd = 2)
plot(datetime, data$Global_active_power, type = "line", lty = 1, lwd = 1)
plot(datetime, data$Global_active_power, lty = 1, lwd = 1)
plot(datetime, data$Global_active_power, lty = 2, lwd = 1)
plot(datetime, data$Global_active_power, lty = 3, lwd = 1)
plot(datetime, data$Global_active_power, lty = 3, lwd = 1)
plot(datetime, data$Global_active_power, type = "line")
plot(datetime, data$Global_active_power, type = "line", ylab = "Global Active Power (kilowatts)")
plot(datetime, data$Global_active_power, type = "line", ylab = "Global Active Power (kilowatts)", xlab = "")
source('~/ExData_Plotting1/plot2.R')
plot(datetime, data$Global_active_power, type = "line", bg = "transparent" ylab = "Global Active Power (kilowatts)", xlab = "")
plot(datetime, data$Global_active_power, type = "line", bg = "transparent", ylab = "Global Active Power (kilowatts)", xlab = "")
plot(datetime, data$Global_active_power, type = "l", bg = "transparent", ylab = "Global Active Power (kilowatts)", xlab = "")
plot(datetime, data$Global_active_power, type = "line", ylab = "Global Active Power (kilowatts)", xlab = "")
source('~/ExData_Plotting1/plot2.R')
setwd("~/ExData_Plotting1")
source('~/ExData_Plotting1/plot2.R')
?plot
source('~/ExData_Plotting1/plot2.R')
source('~/ExData_Plotting1/plot2.R')
source('~/ExData_Plotting1/plot1.R')
source('~/ExData_Plotting1/plot3.R')
dev.off()
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot3.R')
dev.off()
source('~/ExData_Plotting1/plot3.R')
legend("topright", pch = rep("l",3) col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
rep("l",3)
dev.off()
source('~/ExData_Plotting1/plot3.R')
pch(1)
pch(2)
pch('1')
pch = (1)
pch
pch
?lines
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot3.R')
dev.off()
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot3.R')
dev.off()
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot3.R')
dev.off()
source('~/ExData_Plotting1/plot3.R')
dev.off()
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot3.R')
dev.off()
source('~/ExData_Plotting1/plot3.R')
dev.off()
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot2.R')
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot3.R')
dev.off()
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot3.R')
?legend
source('~/ExData_Plotting1/plot3.R')
?legend
source('~/ExData_Plotting1/plot3.R')
dev.off()
source('~/ExData_Plotting1/plot3.R')
?legend
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot3.R')
?legend
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot3.R')
?legend
png ("plot3.png", width = 480, height = 480)
# Building the first plot
plot(datetime, data$Sub_metering_1, type = "l", ylab = "Energy sub metering", xlab = "", col = "black")
lines(datetime, data$Sub_metering_2, type = "l", col = "red")
lines(datetime, data$Sub_metering_3, type = "l", col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = rep("solid",3), col = c("black", "red", "blue"))
par(fin = c(480,480), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0), bg = "transparent")
# Close the graphics device
dev.off()
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot2.R')
source('~/ExData_Plotting1/plot1.R')
plot(datetime, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
dev.off()
plot(datetime, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
par(mfrow = c(2, 2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0), bg = "transparent")
plot(datetime, data$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
dev.off()
source('~/ExData_Plotting1/plot4.R')
source('~/ExData_Plotting1/plot2.R')
source('~/ExData_Plotting1/plot3.R')
source('~/ExData_Plotting1/plot1.R')
